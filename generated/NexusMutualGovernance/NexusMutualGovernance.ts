// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class ActionFailed extends ethereum.Event {
  get params(): ActionFailed__Params {
    return new ActionFailed__Params(this);
  }
}

export class ActionFailed__Params {
  _event: ActionFailed;

  constructor(event: ActionFailed) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ActionRejected extends ethereum.Event {
  get params(): ActionRejected__Params {
    return new ActionRejected__Params(this);
  }
}

export class ActionRejected__Params {
  _event: ActionRejected;

  constructor(event: ActionRejected) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get rejectedBy(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProposalCategorized extends ethereum.Event {
  get params(): ProposalCategorized__Params {
    return new ProposalCategorized__Params(this);
  }
}

export class ProposalCategorized__Params {
  _event: ProposalCategorized;

  constructor(event: ProposalCategorized) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get categorizedBy(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get categoryId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Proposal extends ethereum.Event {
  get params(): Proposal__Params {
    return new Proposal__Params(this);
  }
}

export class Proposal__Params {
  _event: Proposal;

  constructor(event: Proposal) {
    this._event = event;
  }

  get proposalOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get proposalId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get dateAdd(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get proposalTitle(): string {
    return this._event.parameters[3].value.toString();
  }

  get proposalSD(): string {
    return this._event.parameters[4].value.toString();
  }

  get proposalDescHash(): string {
    return this._event.parameters[5].value.toString();
  }
}

export class Solution extends ethereum.Event {
  get params(): Solution__Params {
    return new Solution__Params(this);
  }
}

export class Solution__Params {
  _event: Solution;

  constructor(event: Solution) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get solutionOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get solutionId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get solutionDescHash(): string {
    return this._event.parameters[3].value.toString();
  }

  get dateAdd(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Vote extends ethereum.Event {
  get params(): Vote__Params {
    return new Vote__Params(this);
  }
}

export class Vote__Params {
  _event: Vote;

  constructor(event: Vote) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get proposalId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get voteId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get dateAdd(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get solutionChosen(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class RewardClaimed extends ethereum.Event {
  get params(): RewardClaimed__Params {
    return new RewardClaimed__Params(this);
  }
}

export class RewardClaimed__Params {
  _event: RewardClaimed;

  constructor(event: RewardClaimed) {
    this._event = event;
  }

  get member(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get gbtReward(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class VoteCast extends ethereum.Event {
  get params(): VoteCast__Params {
    return new VoteCast__Params(this);
  }
}

export class VoteCast__Params {
  _event: VoteCast;

  constructor(event: VoteCast) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ProposalAccepted extends ethereum.Event {
  get params(): ProposalAccepted__Params {
    return new ProposalAccepted__Params(this);
  }
}

export class ProposalAccepted__Params {
  _event: ProposalAccepted;

  constructor(event: ProposalAccepted) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class CloseProposalOnTime extends ethereum.Event {
  get params(): CloseProposalOnTime__Params {
    return new CloseProposalOnTime__Params(this);
  }
}

export class CloseProposalOnTime__Params {
  _event: CloseProposalOnTime;

  constructor(event: CloseProposalOnTime) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ActionSuccess extends ethereum.Event {
  get params(): ActionSuccess__Params {
    return new ActionSuccess__Params(this);
  }
}

export class ActionSuccess__Params {
  _event: ActionSuccess;

  constructor(event: ActionSuccess) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class NexusMutualGovernance__voteTallyDataResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }

  getValue2(): BigInt {
    return this.value2;
  }
}

export class NexusMutualGovernance__proposalDetailsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }

  getValue2(): BigInt {
    return this.value2;
  }
}

export class NexusMutualGovernance__getSolutionActionResult {
  value0: BigInt;
  value1: Bytes;

  constructor(value0: BigInt, value1: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBytes(this.value1));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): Bytes {
    return this.value1;
  }
}

export class NexusMutualGovernance__proposalResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getProposalId(): BigInt {
    return this.value0;
  }

  getCategory(): BigInt {
    return this.value1;
  }

  getStatus(): BigInt {
    return this.value2;
  }

  getFinalVerdict(): BigInt {
    return this.value3;
  }

  getTotalRewar(): BigInt {
    return this.value4;
  }
}

export class NexusMutualGovernance__getUintParametersResult {
  value0: Bytes;
  value1: BigInt;

  constructor(value0: Bytes, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getCodeVal(): Bytes {
    return this.value0;
  }

  getVal(): BigInt {
    return this.value1;
  }
}

export class NexusMutualGovernance__allDelegationResult {
  value0: Address;
  value1: Address;
  value2: BigInt;

  constructor(value0: Address, value1: Address, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getFollower(): Address {
    return this.value0;
  }

  getLeader(): Address {
    return this.value1;
  }

  getLastUpd(): BigInt {
    return this.value2;
  }
}

export class NexusMutualGovernance extends ethereum.SmartContract {
  static bind(address: Address): NexusMutualGovernance {
    return new NexusMutualGovernance("NexusMutualGovernance", address);
  }

  memberProposalVote(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "memberProposalVote",
      "memberProposalVote(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );

    return result[0].toBigInt();
  }

  try_memberProposalVote(
    param0: Address,
    param1: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "memberProposalVote",
      "memberProposalVote(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proposalRejectedByAB(param0: BigInt, param1: Address): boolean {
    let result = super.call(
      "proposalRejectedByAB",
      "proposalRejectedByAB(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ],
    );

    return result[0].toBoolean();
  }

  try_proposalRejectedByAB(
    param0: BigInt,
    param1: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "proposalRejectedByAB",
      "proposalRejectedByAB(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  voteTallyData(
    _proposalId: BigInt,
    _solution: BigInt,
  ): NexusMutualGovernance__voteTallyDataResult {
    let result = super.call(
      "voteTallyData",
      "voteTallyData(uint256,uint256):(uint256,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_proposalId),
        ethereum.Value.fromUnsignedBigInt(_solution),
      ],
    );

    return new NexusMutualGovernance__voteTallyDataResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
    );
  }

  try_voteTallyData(
    _proposalId: BigInt,
    _solution: BigInt,
  ): ethereum.CallResult<NexusMutualGovernance__voteTallyDataResult> {
    let result = super.tryCall(
      "voteTallyData",
      "voteTallyData(uint256,uint256):(uint256,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_proposalId),
        ethereum.Value.fromUnsignedBigInt(_solution),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new NexusMutualGovernance__voteTallyDataResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
      ),
    );
  }

  proposalDetails(
    _proposalId: BigInt,
  ): NexusMutualGovernance__proposalDetailsResult {
    let result = super.call(
      "proposalDetails",
      "proposalDetails(uint256):(uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_proposalId)],
    );

    return new NexusMutualGovernance__proposalDetailsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
    );
  }

  try_proposalDetails(
    _proposalId: BigInt,
  ): ethereum.CallResult<NexusMutualGovernance__proposalDetailsResult> {
    let result = super.tryCall(
      "proposalDetails",
      "proposalDetails(uint256):(uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_proposalId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new NexusMutualGovernance__proposalDetailsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
      ),
    );
  }

  claimReward(_memberAddress: Address, _maxRecords: BigInt): BigInt {
    let result = super.call(
      "claimReward",
      "claimReward(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_memberAddress),
        ethereum.Value.fromUnsignedBigInt(_maxRecords),
      ],
    );

    return result[0].toBigInt();
  }

  try_claimReward(
    _memberAddress: Address,
    _maxRecords: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "claimReward",
      "claimReward(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_memberAddress),
        ethereum.Value.fromUnsignedBigInt(_maxRecords),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proposalActionStatus(param0: BigInt): BigInt {
    let result = super.call(
      "proposalActionStatus",
      "proposalActionStatus(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return result[0].toBigInt();
  }

  try_proposalActionStatus(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "proposalActionStatus",
      "proposalActionStatus(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSolutionAction(
    _proposalId: BigInt,
    _solution: BigInt,
  ): NexusMutualGovernance__getSolutionActionResult {
    let result = super.call(
      "getSolutionAction",
      "getSolutionAction(uint256,uint256):(uint256,bytes)",
      [
        ethereum.Value.fromUnsignedBigInt(_proposalId),
        ethereum.Value.fromUnsignedBigInt(_solution),
      ],
    );

    return new NexusMutualGovernance__getSolutionActionResult(
      result[0].toBigInt(),
      result[1].toBytes(),
    );
  }

  try_getSolutionAction(
    _proposalId: BigInt,
    _solution: BigInt,
  ): ethereum.CallResult<NexusMutualGovernance__getSolutionActionResult> {
    let result = super.tryCall(
      "getSolutionAction",
      "getSolutionAction(uint256,uint256):(uint256,bytes)",
      [
        ethereum.Value.fromUnsignedBigInt(_proposalId),
        ethereum.Value.fromUnsignedBigInt(_solution),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new NexusMutualGovernance__getSolutionActionResult(
        value[0].toBigInt(),
        value[1].toBytes(),
      ),
    );
  }

  proposal(_proposalId: BigInt): NexusMutualGovernance__proposalResult {
    let result = super.call(
      "proposal",
      "proposal(uint256):(uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_proposalId)],
    );

    return new NexusMutualGovernance__proposalResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
    );
  }

  try_proposal(
    _proposalId: BigInt,
  ): ethereum.CallResult<NexusMutualGovernance__proposalResult> {
    let result = super.tryCall(
      "proposal",
      "proposal(uint256):(uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_proposalId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new NexusMutualGovernance__proposalResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
      ),
    );
  }

  tokenHoldingTime(): BigInt {
    let result = super.call(
      "tokenHoldingTime",
      "tokenHoldingTime():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_tokenHoldingTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenHoldingTime",
      "tokenHoldingTime():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPendingReward(_memberAddress: Address): BigInt {
    let result = super.call(
      "getPendingReward",
      "getPendingReward(address):(uint256)",
      [ethereum.Value.fromAddress(_memberAddress)],
    );

    return result[0].toBigInt();
  }

  try_getPendingReward(_memberAddress: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPendingReward",
      "getPendingReward(address):(uint256)",
      [ethereum.Value.fromAddress(_memberAddress)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  rewardClaimed(param0: BigInt, param1: Address): boolean {
    let result = super.call(
      "rewardClaimed",
      "rewardClaimed(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ],
    );

    return result[0].toBoolean();
  }

  try_rewardClaimed(
    param0: BigInt,
    param1: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "rewardClaimed",
      "rewardClaimed(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getUintParameters(
    code: Bytes,
  ): NexusMutualGovernance__getUintParametersResult {
    let result = super.call(
      "getUintParameters",
      "getUintParameters(bytes8):(bytes8,uint256)",
      [ethereum.Value.fromFixedBytes(code)],
    );

    return new NexusMutualGovernance__getUintParametersResult(
      result[0].toBytes(),
      result[1].toBigInt(),
    );
  }

  try_getUintParameters(
    code: Bytes,
  ): ethereum.CallResult<NexusMutualGovernance__getUintParametersResult> {
    let result = super.tryCall(
      "getUintParameters",
      "getUintParameters(bytes8):(bytes8,uint256)",
      [ethereum.Value.fromFixedBytes(code)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new NexusMutualGovernance__getUintParametersResult(
        value[0].toBytes(),
        value[1].toBigInt(),
      ),
    );
  }

  followerDelegation(param0: Address): BigInt {
    let result = super.call(
      "followerDelegation",
      "followerDelegation(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_followerDelegation(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "followerDelegation",
      "followerDelegation(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getProposalLength(): BigInt {
    let result = super.call(
      "getProposalLength",
      "getProposalLength():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_getProposalLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getProposalLength",
      "getProposalLength():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  allowedToCreateProposal(category: BigInt): boolean {
    let result = super.call(
      "allowedToCreateProposal",
      "allowedToCreateProposal(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(category)],
    );

    return result[0].toBoolean();
  }

  try_allowedToCreateProposal(category: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "allowedToCreateProposal",
      "allowedToCreateProposal(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(category)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  ms(): Address {
    let result = super.call("ms", "ms():(address)", []);

    return result[0].toAddress();
  }

  try_ms(): ethereum.CallResult<Address> {
    let result = super.tryCall("ms", "ms():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  allowedToCatgorize(): BigInt {
    let result = super.call(
      "allowedToCatgorize",
      "allowedToCatgorize():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_allowedToCatgorize(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allowedToCatgorize",
      "allowedToCatgorize():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  allDelegation(param0: BigInt): NexusMutualGovernance__allDelegationResult {
    let result = super.call(
      "allDelegation",
      "allDelegation(uint256):(address,address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new NexusMutualGovernance__allDelegationResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt(),
    );
  }

  try_allDelegation(
    param0: BigInt,
  ): ethereum.CallResult<NexusMutualGovernance__allDelegationResult> {
    let result = super.tryCall(
      "allDelegation",
      "allDelegation(uint256):(address,address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new NexusMutualGovernance__allDelegationResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt(),
      ),
    );
  }

  canCloseProposal(_proposalId: BigInt): BigInt {
    let result = super.call(
      "canCloseProposal",
      "canCloseProposal(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_proposalId)],
    );

    return result[0].toBigInt();
  }

  try_canCloseProposal(_proposalId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "canCloseProposal",
      "canCloseProposal(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_proposalId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFollowers(_add: Address): Array<BigInt> {
    let result = super.call(
      "getFollowers",
      "getFollowers(address):(uint256[])",
      [ethereum.Value.fromAddress(_add)],
    );

    return result[0].toBigIntArray();
  }

  try_getFollowers(_add: Address): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getFollowers",
      "getFollowers(address):(uint256[])",
      [ethereum.Value.fromAddress(_add)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  isOpenForDelegation(param0: Address): boolean {
    let result = super.call(
      "isOpenForDelegation",
      "isOpenForDelegation(address):(bool)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBoolean();
  }

  try_isOpenForDelegation(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isOpenForDelegation",
      "isOpenForDelegation(address):(bool)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  lastRewardClaimed(param0: Address): BigInt {
    let result = super.call(
      "lastRewardClaimed",
      "lastRewardClaimed(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_lastRewardClaimed(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lastRewardClaimed",
      "lastRewardClaimed(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proposalVoteTally(param0: BigInt): BigInt {
    let result = super.call(
      "proposalVoteTally",
      "proposalVoteTally(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return result[0].toBigInt();
  }

  try_proposalVoteTally(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "proposalVoteTally",
      "proposalVoteTally(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  nxMasterAddress(): Address {
    let result = super.call(
      "nxMasterAddress",
      "nxMasterAddress():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_nxMasterAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "nxMasterAddress",
      "nxMasterAddress():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  alreadyDelegated(_add: Address): boolean {
    let result = super.call(
      "alreadyDelegated",
      "alreadyDelegated(address):(bool)",
      [ethereum.Value.fromAddress(_add)],
    );

    return result[0].toBoolean();
  }

  try_alreadyDelegated(_add: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "alreadyDelegated",
      "alreadyDelegated(address):(bool)",
      [ethereum.Value.fromAddress(_add)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class CloseProposalCall extends ethereum.Call {
  get inputs(): CloseProposalCall__Inputs {
    return new CloseProposalCall__Inputs(this);
  }

  get outputs(): CloseProposalCall__Outputs {
    return new CloseProposalCall__Outputs(this);
  }
}

export class CloseProposalCall__Inputs {
  _call: CloseProposalCall;

  constructor(call: CloseProposalCall) {
    this._call = call;
  }

  get _proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CloseProposalCall__Outputs {
  _call: CloseProposalCall;

  constructor(call: CloseProposalCall) {
    this._call = call;
  }
}

export class ChangeDependentContractAddressCall extends ethereum.Call {
  get inputs(): ChangeDependentContractAddressCall__Inputs {
    return new ChangeDependentContractAddressCall__Inputs(this);
  }

  get outputs(): ChangeDependentContractAddressCall__Outputs {
    return new ChangeDependentContractAddressCall__Outputs(this);
  }
}

export class ChangeDependentContractAddressCall__Inputs {
  _call: ChangeDependentContractAddressCall;

  constructor(call: ChangeDependentContractAddressCall) {
    this._call = call;
  }
}

export class ChangeDependentContractAddressCall__Outputs {
  _call: ChangeDependentContractAddressCall;

  constructor(call: ChangeDependentContractAddressCall) {
    this._call = call;
  }
}

export class CreateProposalwithSolutionCall extends ethereum.Call {
  get inputs(): CreateProposalwithSolutionCall__Inputs {
    return new CreateProposalwithSolutionCall__Inputs(this);
  }

  get outputs(): CreateProposalwithSolutionCall__Outputs {
    return new CreateProposalwithSolutionCall__Outputs(this);
  }
}

export class CreateProposalwithSolutionCall__Inputs {
  _call: CreateProposalwithSolutionCall;

  constructor(call: CreateProposalwithSolutionCall) {
    this._call = call;
  }

  get _proposalTitle(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _proposalSD(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _proposalDescHash(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _categoryId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _solutionHash(): string {
    return this._call.inputValues[4].value.toString();
  }

  get _action(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class CreateProposalwithSolutionCall__Outputs {
  _call: CreateProposalwithSolutionCall;

  constructor(call: CreateProposalwithSolutionCall) {
    this._call = call;
  }
}

export class ClaimRewardCall extends ethereum.Call {
  get inputs(): ClaimRewardCall__Inputs {
    return new ClaimRewardCall__Inputs(this);
  }

  get outputs(): ClaimRewardCall__Outputs {
    return new ClaimRewardCall__Outputs(this);
  }
}

export class ClaimRewardCall__Inputs {
  _call: ClaimRewardCall;

  constructor(call: ClaimRewardCall) {
    this._call = call;
  }

  get _memberAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _maxRecords(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ClaimRewardCall__Outputs {
  _call: ClaimRewardCall;

  constructor(call: ClaimRewardCall) {
    this._call = call;
  }

  get pendingDAppReward(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class UnDelegateCall extends ethereum.Call {
  get inputs(): UnDelegateCall__Inputs {
    return new UnDelegateCall__Inputs(this);
  }

  get outputs(): UnDelegateCall__Outputs {
    return new UnDelegateCall__Outputs(this);
  }
}

export class UnDelegateCall__Inputs {
  _call: UnDelegateCall;

  constructor(call: UnDelegateCall) {
    this._call = call;
  }
}

export class UnDelegateCall__Outputs {
  _call: UnDelegateCall;

  constructor(call: UnDelegateCall) {
    this._call = call;
  }
}

export class SetDelegationStatusCall extends ethereum.Call {
  get inputs(): SetDelegationStatusCall__Inputs {
    return new SetDelegationStatusCall__Inputs(this);
  }

  get outputs(): SetDelegationStatusCall__Outputs {
    return new SetDelegationStatusCall__Outputs(this);
  }
}

export class SetDelegationStatusCall__Inputs {
  _call: SetDelegationStatusCall;

  constructor(call: SetDelegationStatusCall) {
    this._call = call;
  }

  get _status(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetDelegationStatusCall__Outputs {
  _call: SetDelegationStatusCall;

  constructor(call: SetDelegationStatusCall) {
    this._call = call;
  }
}

export class RejectActionCall extends ethereum.Call {
  get inputs(): RejectActionCall__Inputs {
    return new RejectActionCall__Inputs(this);
  }

  get outputs(): RejectActionCall__Outputs {
    return new RejectActionCall__Outputs(this);
  }
}

export class RejectActionCall__Inputs {
  _call: RejectActionCall;

  constructor(call: RejectActionCall) {
    this._call = call;
  }

  get _proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RejectActionCall__Outputs {
  _call: RejectActionCall;

  constructor(call: RejectActionCall) {
    this._call = call;
  }
}

export class CreateProposalCall extends ethereum.Call {
  get inputs(): CreateProposalCall__Inputs {
    return new CreateProposalCall__Inputs(this);
  }

  get outputs(): CreateProposalCall__Outputs {
    return new CreateProposalCall__Outputs(this);
  }
}

export class CreateProposalCall__Inputs {
  _call: CreateProposalCall;

  constructor(call: CreateProposalCall) {
    this._call = call;
  }

  get _proposalTitle(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _proposalSD(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _proposalDescHash(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _categoryId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class CreateProposalCall__Outputs {
  _call: CreateProposalCall;

  constructor(call: CreateProposalCall) {
    this._call = call;
  }
}

export class CategorizeProposalCall extends ethereum.Call {
  get inputs(): CategorizeProposalCall__Inputs {
    return new CategorizeProposalCall__Inputs(this);
  }

  get outputs(): CategorizeProposalCall__Outputs {
    return new CategorizeProposalCall__Outputs(this);
  }
}

export class CategorizeProposalCall__Inputs {
  _call: CategorizeProposalCall;

  constructor(call: CategorizeProposalCall) {
    this._call = call;
  }

  get _proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _categoryId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _incentive(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CategorizeProposalCall__Outputs {
  _call: CategorizeProposalCall;

  constructor(call: CategorizeProposalCall) {
    this._call = call;
  }
}

export class SubmitVoteCall extends ethereum.Call {
  get inputs(): SubmitVoteCall__Inputs {
    return new SubmitVoteCall__Inputs(this);
  }

  get outputs(): SubmitVoteCall__Outputs {
    return new SubmitVoteCall__Outputs(this);
  }
}

export class SubmitVoteCall__Inputs {
  _call: SubmitVoteCall;

  constructor(call: SubmitVoteCall) {
    this._call = call;
  }

  get _proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _solutionChosen(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SubmitVoteCall__Outputs {
  _call: SubmitVoteCall;

  constructor(call: SubmitVoteCall) {
    this._call = call;
  }
}

export class SubmitProposalWithSolutionCall extends ethereum.Call {
  get inputs(): SubmitProposalWithSolutionCall__Inputs {
    return new SubmitProposalWithSolutionCall__Inputs(this);
  }

  get outputs(): SubmitProposalWithSolutionCall__Outputs {
    return new SubmitProposalWithSolutionCall__Outputs(this);
  }
}

export class SubmitProposalWithSolutionCall__Inputs {
  _call: SubmitProposalWithSolutionCall;

  constructor(call: SubmitProposalWithSolutionCall) {
    this._call = call;
  }

  get _proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _solutionHash(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _action(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class SubmitProposalWithSolutionCall__Outputs {
  _call: SubmitProposalWithSolutionCall;

  constructor(call: SubmitProposalWithSolutionCall) {
    this._call = call;
  }
}

export class UpdateUintParametersCall extends ethereum.Call {
  get inputs(): UpdateUintParametersCall__Inputs {
    return new UpdateUintParametersCall__Inputs(this);
  }

  get outputs(): UpdateUintParametersCall__Outputs {
    return new UpdateUintParametersCall__Outputs(this);
  }
}

export class UpdateUintParametersCall__Inputs {
  _call: UpdateUintParametersCall;

  constructor(call: UpdateUintParametersCall) {
    this._call = call;
  }

  get code(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get val(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateUintParametersCall__Outputs {
  _call: UpdateUintParametersCall;

  constructor(call: UpdateUintParametersCall) {
    this._call = call;
  }
}

export class DelegateVoteCall extends ethereum.Call {
  get inputs(): DelegateVoteCall__Inputs {
    return new DelegateVoteCall__Inputs(this);
  }

  get outputs(): DelegateVoteCall__Outputs {
    return new DelegateVoteCall__Outputs(this);
  }
}

export class DelegateVoteCall__Inputs {
  _call: DelegateVoteCall;

  constructor(call: DelegateVoteCall) {
    this._call = call;
  }

  get _add(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DelegateVoteCall__Outputs {
  _call: DelegateVoteCall;

  constructor(call: DelegateVoteCall) {
    this._call = call;
  }
}

export class TriggerActionCall extends ethereum.Call {
  get inputs(): TriggerActionCall__Inputs {
    return new TriggerActionCall__Inputs(this);
  }

  get outputs(): TriggerActionCall__Outputs {
    return new TriggerActionCall__Outputs(this);
  }
}

export class TriggerActionCall__Inputs {
  _call: TriggerActionCall;

  constructor(call: TriggerActionCall) {
    this._call = call;
  }

  get _proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class TriggerActionCall__Outputs {
  _call: TriggerActionCall;

  constructor(call: TriggerActionCall) {
    this._call = call;
  }
}

export class SetInitialActionParametersCall extends ethereum.Call {
  get inputs(): SetInitialActionParametersCall__Inputs {
    return new SetInitialActionParametersCall__Inputs(this);
  }

  get outputs(): SetInitialActionParametersCall__Outputs {
    return new SetInitialActionParametersCall__Outputs(this);
  }
}

export class SetInitialActionParametersCall__Inputs {
  _call: SetInitialActionParametersCall;

  constructor(call: SetInitialActionParametersCall) {
    this._call = call;
  }
}

export class SetInitialActionParametersCall__Outputs {
  _call: SetInitialActionParametersCall;

  constructor(call: SetInitialActionParametersCall) {
    this._call = call;
  }
}

export class ChangeMasterAddressCall extends ethereum.Call {
  get inputs(): ChangeMasterAddressCall__Inputs {
    return new ChangeMasterAddressCall__Inputs(this);
  }

  get outputs(): ChangeMasterAddressCall__Outputs {
    return new ChangeMasterAddressCall__Outputs(this);
  }
}

export class ChangeMasterAddressCall__Inputs {
  _call: ChangeMasterAddressCall;

  constructor(call: ChangeMasterAddressCall) {
    this._call = call;
  }

  get _masterAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeMasterAddressCall__Outputs {
  _call: ChangeMasterAddressCall;

  constructor(call: ChangeMasterAddressCall) {
    this._call = call;
  }
}

export class UpdateProposalCall extends ethereum.Call {
  get inputs(): UpdateProposalCall__Inputs {
    return new UpdateProposalCall__Inputs(this);
  }

  get outputs(): UpdateProposalCall__Outputs {
    return new UpdateProposalCall__Outputs(this);
  }
}

export class UpdateProposalCall__Inputs {
  _call: UpdateProposalCall;

  constructor(call: UpdateProposalCall) {
    this._call = call;
  }

  get _proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _proposalTitle(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _proposalSD(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _proposalDescHash(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class UpdateProposalCall__Outputs {
  _call: UpdateProposalCall;

  constructor(call: UpdateProposalCall) {
    this._call = call;
  }
}

export class RemoveDelegationCall extends ethereum.Call {
  get inputs(): RemoveDelegationCall__Inputs {
    return new RemoveDelegationCall__Inputs(this);
  }

  get outputs(): RemoveDelegationCall__Outputs {
    return new RemoveDelegationCall__Outputs(this);
  }
}

export class RemoveDelegationCall__Inputs {
  _call: RemoveDelegationCall;

  constructor(call: RemoveDelegationCall) {
    this._call = call;
  }

  get _add(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveDelegationCall__Outputs {
  _call: RemoveDelegationCall;

  constructor(call: RemoveDelegationCall) {
    this._call = call;
  }
}
